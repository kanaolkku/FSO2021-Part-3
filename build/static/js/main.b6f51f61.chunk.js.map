{"version":3,"sources":["components/PersonForm.js","components/Persons.js","components/Filter.js","services/personsService.js","components/Notification.js","App.js","index.js"],"names":["PersonForm","addPerson","handleNameChange","handleNumberChange","newNumber","newName","onSubmit","onChange","value","type","Persons","filteredPersons","deletePerson","map","person","name","number","onClick","id","Filter","handleFilterChange","filter","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","message","className","App","useState","persons","setPersons","setNewName","setNewNumber","setFilter","setFilteredPersons","setMessage","useEffect","personsService","initialPersons","resetFields","resetMessage","setTimeout","event","target","findPersons","includes","preventDefault","personObject","some","window","confirm","newArr","console","log","objectIndex","findIndex","object","catch","err","returnedNote","concat","error","p","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b6f51f61.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst PersonForm = ({ addPerson, handleNameChange, handleNumberChange, newNumber, newName }) => {\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={addPerson}>\r\n        <div>\r\n          name: <input\r\n            onChange={handleNameChange}\r\n            value={newName} />\r\n\r\n        </div>\r\n        <div>\r\n          number: <input\r\n            onChange={handleNumberChange}\r\n            value={newNumber} />\r\n\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PersonForm;","import React from \"react\";\r\n\r\nconst Persons = ({ filteredPersons, deletePerson }) => {\r\n\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {filteredPersons.map(person => <li key={person.name}>{person.name} {person.number}\r\n          <button onClick={() => deletePerson(person.id, person.name)}>delete</button>\r\n        </li>)}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Persons","import React from \"react\";\r\n\r\nconst Filter = ({ handleFilterChange, filter }) => {\r\n\r\n  return (\r\n    <div>\r\n      Filtered with:\r\n      <input onChange={handleFilterChange} value={filter} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter","import axios from 'axios';\r\nconst baseUrl = \"/api/persons\"\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data);\r\n}\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n  deletePerson\r\n}","import React from \"react\";\r\n\r\nconst Notification = ({ message, type }) => {\r\n  if (type === \"error\") {\r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  } else if (type === \"success\") {\r\n    return (\r\n      <div className=\"success\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport default Notification;","import React, { useState, useEffect } from 'react'\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport Filter from './components/Filter';\nimport personsService from './services/personsService';\nimport Notification from './components/Notification';\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState(\"\")\n  const [filter, setFilter] = useState(\"\");\n  const [filteredPersons, setFilteredPersons] = useState(persons);\n  const [message, setMessage] = useState({ message: \"\", type: null })\n\n  useEffect(() => {\n    personsService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n        setFilteredPersons(initialPersons)\n      })\n  }, [])\n\n  const resetFields = () => {\n    setNewName(\"\");\n    setNewNumber(\"\");\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value);\n    const findPersons = persons.filter(person => person.name.includes(event.target.value))\n    setFilteredPersons(findPersons)\n  }\n\n  const resetMessage = () => {\n    setTimeout(() => {\n      setMessage({ message: \"\", type: null })\n    }, 2000)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault();\n\n    if (newNumber === \"\") {\n      setMessage({ message: \"Please add a number\", type: \"error\" })\n    } else {\n      const personObject = {\n        name: newName,\n        number: newNumber\n      }\n      if (persons.some(person => person.name === personObject.name)) {\n        if (window.confirm(`${personObject.name} is already added to phonebook, replace the old number with a new one?`)) {\n          let newArr = persons;\n          console.log(newName)\n          const objectIndex = newArr.findIndex(object => object.name === newName);\n          let newObject = newArr[objectIndex];\n          newObject = { ...newObject, number: newNumber };\n          newArr[objectIndex] = newObject;\n\n          personsService\n            .update(newObject.id, newObject)\n            .then(() => {\n              setPersons(newArr);\n              setFilteredPersons(newArr);\n              setMessage({ message: `Number for ${newObject.name} was changed successfully`, type: \"success\" });\n            }\n            )\n            .catch(err => {\n              setMessage({ message: `${newObject.name} does not exist, refresh your page and try again`, type: \"error\" });\n            })\n          resetFields();\n        } else {\n          resetFields();\n        }\n      } else {\n        personsService\n          .create(personObject)\n          .then(returnedNote => {\n            setPersons(persons.concat(returnedNote));\n            setFilteredPersons(persons.concat(returnedNote));\n            resetFields();\n            setFilter(\"\");\n\n            setMessage({ message: `${personObject.name} was added successfully`, type: \"success\" });\n          })\n          .catch(err => {\n            setMessage({ message: err.response.data.error, type: \"error\" })\n          })\n      }\n    }\n    resetMessage();\n  }\n\n  const deletePerson = (id, name) => {\n    if (window.confirm(`Delete ${name}?`)) {\n      personsService.deletePerson(id);\n      const newArr = persons.filter(p => p.id !== id);\n      setPersons(newArr);\n      setFilteredPersons(newArr);\n\n      setMessage({ message: `${name} was removed successfully`, type: \"success\" })\n      resetMessage();\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification\n        message={message.message}\n        type={message.type}\n      />\n      <Filter\n        handleFilterChange={handleFilterChange}\n        filter={filter} />\n      <h2>add a new</h2>\n      <PersonForm\n        addPerson={addPerson}\n        handleNameChange={handleNameChange}\n        newName={newName}\n        handleNumberChange={handleNumberChange}\n        newNumber={newNumber}\n      />\n      <h2>Numbers</h2>\n      <Persons filteredPersons={filteredPersons} deletePerson={deletePerson} />\n    </div>\n  )\n\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}